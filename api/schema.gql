enum WalletType {
  SAFE
  BICONOMY
}

input WalletFeature {
  id: String!
  serializedParams: String
}

type CreateWalletFromMetadataResponse {
  status: Int!
}

type Mutation {
  createWalletFromMetadata(
    walletType: WalletType!
    features: [WalletFeature!]!
  ): CreateWalletFromMetadataResponse!
}

type Query {
  ping: String!
}

input User {
  phoneOrEmail: String!
}

input SaveToIpfsInput {
  walletType: WalletType!
  features: [WalletFeature!]!
  users: [User!]!
}

type UserCid {
  phoneOrEmail: String!
  cid: String!
}

type SaveToIpfsResponse {
  userCids: [UserCid!]
  status: Int!
}

type Mutation {
  safeToIpfsNode(input: SaveToIpfsInput!): SaveToIpfsResponse!
}
